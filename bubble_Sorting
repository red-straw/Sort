#include <stdio.h>
int main() {
    int v[] = {2, 4, 1, 5, 3};
    int n = 5, i, j;
    for (i = 0; i < 4; i++) {
        for (j = 0; j < 4-i; j++) {
            if (v[j] > v[j + 1]) {
                int t = v[j];
                v[j] = v[j + 1];
                v[j + 1] = t;
            }
        }
    }
    return 0;
}

버블정렬 알고리즘을 사용하여 배열 v를 오름차순으로 정렬하는 코드이다.
버블정렬은 인접한 두 원소를 비교하면서 필요에 따라 교환을 반복하여 배열을 정렬하는 알고리즘이다.
큰 값이 배열의 끝으로 올라가는 과정(bubbling up)과 같아 이름붙여 졌다.

첫번째 원소부터 시작하여 인접한 원소를 비교한다.
앞의 원소가 뒤의 원소보다 크면 두 원소를 교환한다.
배열의 끝까지 도달하면 가장 큰 원소가 맨 뒤에 위치하게 된다.
위의 과정을 처음부터 끝까지 반복하면서 정렬된 부분이 확장된다.
더이상의 교환이 발생하지 않을 때까지 반복한다.


버블정렬은 구현이 간단하고 크기가 작은 데이터셋에서 다른 알고리즘과 비슷한 효율을 보일 수 있다.
하지만 큰 데이터셋에서는 효율성이 매우 낮고 이미 정렬된 데이터셋에서도 교환이 발생하므로 불필요한 연산이 많이 일어난다.
원소값이 같을 때의 순서가 보장되지 않을 수 있어 안정성이 없을 수 있다.
바교횟수가 많아 대부분의 정렬작업에서 다른 알고리즘보다 많은 시간이 소요된다.
